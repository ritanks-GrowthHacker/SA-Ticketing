### Test Create/Remove Project User Relations API

# Variables (replace with actual values)
@admin_token = {{admin_jwt_token}}
@manager_token = {{manager_jwt_token}}
@user_token = {{user_jwt_token}}
@project_id = {{project_id}}
@user_id_1 = {{user_id_1}}
@user_id_2 = {{user_id_2}}
@role_id_manager = {{role_id_manager}}
@role_id_user = {{role_id_user}}

### POST - Assign users to project (Admin)
POST http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "project_id": "{{project_id}}",
  "assignments": [
    {
      "user_id": "{{user_id_1}}",
      "role_id": "{{role_id_manager}}"
    },
    {
      "user_id": "{{user_id_2}}",
      "role_id": "{{role_id_user}}"
    }
  ],
  "notify": true
}

###

### POST - Assign users to project (Manager - should work if assigned to project)
POST http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{manager_token}}
Content-Type: application/json

{
  "project_id": "{{project_id}}",
  "assignments": [
    {
      "user_id": "{{user_id_2}}",
      "role_id": "{{role_id_user}}"
    }
  ],
  "notify": false
}

###

### POST - Assign users to project (Manager - should fail if not assigned to project)
POST http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{manager_token}}
Content-Type: application/json

{
  "project_id": "some-other-project-id",
  "assignments": [
    {
      "user_id": "{{user_id_2}}",
      "role_id": "{{role_id_user}}"
    }
  ]
}

###

### POST - Assign users to project (User - should fail with 403)
POST http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{user_token}}
Content-Type: application/json

{
  "project_id": "{{project_id}}",
  "assignments": [
    {
      "user_id": "{{user_id_2}}",
      "role_id": "{{role_id_user}}"
    }
  ]
}

###

### POST - Invalid project_id (should fail with 404)
POST http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "project_id": "invalid-project-id",
  "assignments": [
    {
      "user_id": "{{user_id_1}}",
      "role_id": "{{role_id_user}}"
    }
  ]
}

###

### POST - Missing assignments (should fail with 400)
POST http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "project_id": "{{project_id}}"
}

###

### POST - Empty assignments array (should fail with 400)
POST http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "project_id": "{{project_id}}",
  "assignments": []
}

###

### POST - No auth token (should fail with 401)
POST http://localhost:3000/api/create-project-user-relation
Content-Type: application/json

{
  "project_id": "{{project_id}}",
  "assignments": [
    {
      "user_id": "{{user_id_1}}",
      "role_id": "{{role_id_user}}"
    }
  ]
}

###

### DELETE - Remove users from project (Admin)
DELETE http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "project_id": "{{project_id}}",
  "user_ids": ["{{user_id_1}}", "{{user_id_2}}"]
}

###

### DELETE - Remove users from project (Manager - should work if assigned to project)
DELETE http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{manager_token}}
Content-Type: application/json

{
  "project_id": "{{project_id}}",
  "user_ids": ["{{user_id_2}}"]
}

###

### DELETE - Remove users from project (Manager - should fail if not assigned to project)
DELETE http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{manager_token}}
Content-Type: application/json

{
  "project_id": "some-other-project-id",
  "user_ids": ["{{user_id_1}}"]
}

###

### DELETE - Remove users from project (User - should fail with 403)
DELETE http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{user_token}}
Content-Type: application/json

{
  "project_id": "{{project_id}}",
  "user_ids": ["{{user_id_1}}"]
}

###

### DELETE - Invalid project_id (should fail with 404)
DELETE http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "project_id": "invalid-project-id",
  "user_ids": ["{{user_id_1}}"]
}

###

### DELETE - Missing user_ids (should fail with 400)
DELETE http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "project_id": "{{project_id}}"
}

###

### DELETE - Empty user_ids array (should fail with 400)
DELETE http://localhost:3000/api/create-project-user-relation
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "project_id": "{{project_id}}",
  "user_ids": []
}

###

### DELETE - No auth token (should fail with 401)
DELETE http://localhost:3000/api/create-project-user-relation
Content-Type: application/json

{
  "project_id": "{{project_id}}",
  "user_ids": ["{{user_id_1}}"]
}

###